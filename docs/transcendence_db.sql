CREATE TYPE "player_status" AS ENUM (
  'online',
  'offline',
  'in_game'
);

CREATE TYPE "friend_status" AS ENUM (
  'pending',
  'accepted'
);

CREATE TABLE "players" (
  "id" integer PRIMARY KEY,
  "username" varchar,
  "oauth_id" integer,
  "avatar_url" varchar DEFAULT ''default_avatar.png'',
  "two_factor_enabled" boolean DEFAULT false,
  "password" text,
  "created_at" timestamp
);

CREATE TABLE "player_stats" (
  "player_id" integer PRIMARY KEY,
  "wins" integer DEFAULT 0,
  "losses" integer DEFAULT 0,
  "ladder_level" integer DEFAULT 0,
  "achievements" text,
  "status" player_status NOT NULL
);

CREATE TABLE "friends" (
  "user_id" integer,
  "friend_id" integer,
  "status" friend_status NOT NULL,
  "created_at" timestamp
);

CREATE TABLE "blocked_players" (
  "player_id" integer,
  "blocked_player_id" integer,
  "created_at" timestamp
);

CREATE TABLE "channels" (
  "id" integer PRIMARY KEY,
  "name" varchar,
  "owner_id" integer,
  "password" varchar,
  "is_private" boolean DEFAULT false,
  "created_at" timestamp
);

CREATE TABLE "chat_messages" (
  "id" integer PRIMARY KEY,
  "content" text,
  "sender_id" integer,
  "channel_id" integer,
  "created_at" timestamp
);

CREATE TABLE "channel_members" (
  "player_id" integer,
  "channel_id" integer,
  "is_admin" boolean DEFAULT false,
  "is_muted" boolean DEFAULT false,
  "is_banned" boolean DEFAULT false
);

CREATE TABLE "match_history" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "opponent_id" int NOT NULL,
  "user_points" int DEFAULT 0,
  "opponent_points" int DEFAULT 0,
  "timestamp" timestamp NOT NULL
);

COMMENT ON COLUMN "player_stats"."achievements" IS 'A comma-separated list of achievement IDs earned by the player.';

ALTER TABLE "player_stats" ADD FOREIGN KEY ("player_id") REFERENCES "players" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("user_id") REFERENCES "players" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend_id") REFERENCES "players" ("id");

ALTER TABLE "blocked_players" ADD FOREIGN KEY ("player_id") REFERENCES "players" ("id");

ALTER TABLE "blocked_players" ADD FOREIGN KEY ("blocked_player_id") REFERENCES "players" ("id");

ALTER TABLE "channels" ADD FOREIGN KEY ("owner_id") REFERENCES "players" ("id");

ALTER TABLE "chat_messages" ADD FOREIGN KEY ("sender_id") REFERENCES "players" ("id");

ALTER TABLE "chat_messages" ADD FOREIGN KEY ("channel_id") REFERENCES "channels" ("id");

ALTER TABLE "channel_members" ADD FOREIGN KEY ("player_id") REFERENCES "players" ("id");

ALTER TABLE "channel_members" ADD FOREIGN KEY ("channel_id") REFERENCES "channels" ("id");

ALTER TABLE "match_history" ADD FOREIGN KEY ("user_id") REFERENCES "players" ("id");

ALTER TABLE "match_history" ADD FOREIGN KEY ("opponent_id") REFERENCES "players" ("id");
